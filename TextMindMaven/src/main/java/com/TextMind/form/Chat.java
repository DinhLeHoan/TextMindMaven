/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.TextMind.form;

import com.TextMind.Auth.Auth;
import static com.TextMind.Socket.SocketManager.getSocket;
import com.TextMind.component.Chat_Body;
import com.TextMind.component.Chat_Bottom;
import com.TextMind.component.Chat_Title;
import com.TextMind.entity.User;
import com.TextMind.event.EventChat;
import com.TextMind.event.PublicEvent;
import io.socket.emitter.Emitter;
import java.text.SimpleDateFormat;
import java.util.Date;
import net.miginfocom.swing.MigLayout;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author KHOA
 */
public class Chat extends javax.swing.JPanel {
    private Chat_Title chatTitle;
    private Chat_Body chatBody;
    private Chat_Bottom chatBottom;
    private User friend;

    /**
     * Creates new form Menu_Left
     */
    public Chat() {
        initComponents();
        init() ;
    }
    
    private void init() {
        setLayout(new MigLayout("fillx", "0[fill]0", "0[]0[100%, fill]0[shrink 0]0"));        
        chatTitle = new Chat_Title();
        chatBody = new Chat_Body();
        chatBottom = new Chat_Bottom();
        PublicEvent.getInstance().addEventChat(new EventChat() {
            @Override
            public void sendMessage(String text) {
                JSONObject messDataSend = new JSONObject();
                try {
                    messDataSend.put("uidTo", friend.getuID());
                    messDataSend.put("uidFrom", Auth.user.getuID());
                    messDataSend.put("message", text.trim());
                    messDataSend.put("name", Auth.user.getName());
                    Date now = new Date();
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm a");
                    
                    chatBody.addItemRight(messDataSend.getString("message"),sdf.format(now));
                } catch (JSONException ex) {
                    ex.printStackTrace();
                }
                getSocket().emit("messageSend",messDataSend);
            }


        });
        getSocket().on(Auth.user.getuID(), new Emitter.Listener() {
            @Override
            public void call(Object... os) {
                try {
                    String jsonString = (String) os[0];
                    JSONObject messDataSend = new JSONObject(jsonString);

                    String name = messDataSend.optString("name");
                    String message = messDataSend.optString("message");
                    String date = messDataSend.optString("date");
                    if (name.trim().equalsIgnoreCase(Auth.user.getName())) {
                        chatBody.addItemRight(message,date);
                    } else {
                        chatBody.addItemLeft(message, name,date);
                    }
                } catch (JSONException e) {
                    System.out.println(e);
                }
            }
        });


        add(chatTitle, "wrap");
        add(chatBody, "wrap");
        add(chatBottom, "h ::50%");
    }
    

    public void setUser(User user) {
        friend = user;
        chatTitle.setUserName(friend.getName());
        chatBody.clearChat();
        chatBody.setuIDFriend(friend.getuID());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(249, 249, 249));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
